name: Release Please

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, closed]

jobs:
  release-please:
    runs-on: ubuntu-latest
    # Only run release-please on merge to main (not on PR events)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Release Please Action
        uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: github-release
          release-type: simple
          package-name: release-please-demo
          draft: true
          pull-request-title-pattern: "chore${scope}: release${component} ${version}"
          conventional-commits: false
          changelog-types: '[{"type":"feat","section":"🚀 Features","hidden":false},{"type":"fix","section":"🐛 Bug Fixes","hidden":false},{"type":"perf","section":"⚡ Performance Improvements","hidden":false},{"type":"revert","section":"⏪ Reverts","hidden":false},{"type":"docs","section":"📝 Documentation","hidden":false},{"type":"style","section":"💄 Styles","hidden":false},{"type":"refactor","section":"♻️ Code Refactoring","hidden":false},{"type":"test","section":"✅ Tests","hidden":false},{"type":"build","section":"🔧 Build System","hidden":false},{"type":"ci","section":"👷 CI","hidden":false},{"type":"chore","section":"🔨 Miscellaneous","hidden":false}]'

      # Output when draft release is created
      - name: Draft Release Created
        if: ${{ steps.release.outputs.release_created }}
        run: |
          echo "🎉 Draft Release Created from PR titles!"
          echo "📦 Tag: ${{ steps.release.outputs.tag_name }}"
          echo "📝 CHANGELOG.md generated from merged PR titles"
          echo "🔗 Draft Release URL: https://github.com/${{ github.repository }}/releases"
          echo "✅ Review and publish the draft release when ready"

      # Output when no releasable changes found
      - name: No Release Changes
        if: ${{ !steps.release.outputs.release_created }}
        run: |
          echo "ℹ️ No releasable PR titles found since last release"
          echo "📝 PR titles must use conventional format:"
          echo "   feat: add new feature"
          echo "   fix: resolve bug issue"
          echo "   feat!: breaking change"

  pr-validation:
    runs-on: ubuntu-latest
    # Only run on PR events
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate PR Title
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "🔍 Validating PR title: $PR_TITLE"
          
          # Check if PR title follows conventional commit format
          if echo "$PR_TITLE" | grep -qE "^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?!?:\s.+"; then
            echo "✅ PR title follows conventional commit format"
            echo "📝 This will be included in the changelog when merged"
          else
            echo "❌ PR title does not follow conventional commit format"
            echo "📋 Expected format: type: description"
            echo "📋 Examples:"
            echo "   feat: add new feature"
            echo "   fix: resolve bug issue"
            echo "   docs: update documentation"
            exit 1
          fi

      - name: PR Event Info
        run: |
          echo "📝 PR Event: ${{ github.event.action }}"
          echo "🔗 PR Number: ${{ github.event.pull_request.number }}"
          echo "👤 Author: ${{ github.event.pull_request.user.login }}"
          echo "🎯 Target Branch: ${{ github.event.pull_request.base.ref }}"
          echo "🌿 Source Branch: ${{ github.event.pull_request.head.ref }}"
